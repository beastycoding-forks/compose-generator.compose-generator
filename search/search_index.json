{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":"python","separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"contributing/","text":"Contributing \u00b6 Compose Generator is a community-driven project. This means that we are open for feature requests or suggestions for improvement. Apart from that, feel free to fork this project and send us some code contributions via pull requests. In every case please read the Code of Conduct before contributing. Security issues \u00b6 Please do not open issues regarding security on GitHub! Please read our Security Policy and contact us via non-public ways, e.g. per mail: contact@chillibits.com . Feature request and bugs \u00b6 If you want to contribute by reporting a bug (except a security issue) or you want to send in a feature request, please navigate to the issues section on GitHub . Issues that are easy to work on and appropriate for beginners are marked as 'good first issue'. Feel free to claim one of those issues by commenting that you want to do so. After we assign you to the issue, you can start working on the issue / feature request. Please open a pull request when you're done with the work and please only work on one issue at once. Please also refer to the Contribution guidelines on GitHub .","title":"Contributing"},{"location":"contributing/#contributing","text":"Compose Generator is a community-driven project. This means that we are open for feature requests or suggestions for improvement. Apart from that, feel free to fork this project and send us some code contributions via pull requests. In every case please read the Code of Conduct before contributing.","title":"Contributing"},{"location":"contributing/#security-issues","text":"Please do not open issues regarding security on GitHub! Please read our Security Policy and contact us via non-public ways, e.g. per mail: contact@chillibits.com .","title":"Security issues"},{"location":"contributing/#feature-request-and-bugs","text":"If you want to contribute by reporting a bug (except a security issue) or you want to send in a feature request, please navigate to the issues section on GitHub . Issues that are easy to work on and appropriate for beginners are marked as 'good first issue'. Feel free to claim one of those issues by commenting that you want to do so. After we assign you to the issue, you can start working on the issue / feature request. Please open a pull request when you're done with the work and please only work on one issue at once. Please also refer to the Contribution guidelines on GitHub .","title":"Feature request and bugs"},{"location":"intro/","text":"Introduction \u00b6 Compose Generator is a command line tool, which helps you to setup your Docker projects as fast as possible. The command line interface (cli) acts as a helper to handle common Docker tasks, like managing Docker Compose configurations with a simple interface. To get started with Compose Generator, visit our quick-start guide . The focus of Compose Generator is to increase productivity and efficiency of common use cases like setting up Docker and Docker Compose and deploying a software stack. It makes use of predefined service templates that you can use to get exacly what you need and want. Nothing more, nothing less. Compose Generator is also made to be extensible, so if you miss any predefined service, head on to the template contribution guide and provide one! Demo project setup \u00b6 Here you can see a demo, how fast you can setup a Compose configuration for a stack with Angular, Node.js, MySQL and PhpMyAdmin in under 30 seconds (!): If this is what you are looking for, go ahead and read the quick-start guide .","title":"Introduction"},{"location":"intro/#introduction","text":"Compose Generator is a command line tool, which helps you to setup your Docker projects as fast as possible. The command line interface (cli) acts as a helper to handle common Docker tasks, like managing Docker Compose configurations with a simple interface. To get started with Compose Generator, visit our quick-start guide . The focus of Compose Generator is to increase productivity and efficiency of common use cases like setting up Docker and Docker Compose and deploying a software stack. It makes use of predefined service templates that you can use to get exacly what you need and want. Nothing more, nothing less. Compose Generator is also made to be extensible, so if you miss any predefined service, head on to the template contribution guide and provide one!","title":"Introduction"},{"location":"intro/#demo-project-setup","text":"Here you can see a demo, how fast you can setup a Compose configuration for a stack with Angular, Node.js, MySQL and PhpMyAdmin in under 30 seconds (!): If this is what you are looking for, go ahead and read the quick-start guide .","title":"Demo project setup"},{"location":"quick-start/","text":"Quick Start \u00b6 Compose Generator offers several different methods to start with. Choose the one you need for your project below. Setup Compose Generator \u00b6 I want to use it for development Compose Generator makes developing and especially testing much more seamless. Get started by choosing one of the following options: I have Docker already installed Perfect! One thing less to care about ... Let's continue by installing Compose Generator: Install it on your development machine (recommended) If you use Windows on your development machine, please refer to the guide on how to install Compose Generator on Windows and if you work with Linux, you can visit the guide on how to install Compose Generator on Linux . Use it as Docker Container without installing Please refer to the guide on how to use Compose Generator with Docker . Docker is not installed yet No problem. Some commands of Compose Generator can even by used without having Docker installed, although it is recommended to have Docker installed. As Docker is required for most of the tasks for Compose Generator to cover, you should have Docker installed before using it. Compose Generator offers a simple command to install Docker with Docker Compose. Install it on your development machine If you use Windows on your development machine, please refer to the guide on how to install Compose Generator on Windows and if you work with Linux, you can visit the guide on how to install Compose Generator on Linux . I want to use it in production Compose Generator can also be used to generate production ready Docker Compose configurations. To use it in a production environment we have two options: One-time use or more frequent usage. Use it as Docker Container without installing (recommended for one-time use) Please refer to the guide on how to use Compose Generator with Docker . Install it on your development machine (recommended when using more frequently) Installing Compose Generator with the native package manager is recommended due to the enhanced ability to udate to newer versions and to integrate in potentially existing devops workflows. If you use Windows on your development machine, please refer to the guide on how to install Compose Generator on Windows and if you work with Linux, you can visit the guide on how to install Compose Generator on Linux . Generate your first Docker Compose Configuration \u00b6 The first step is, to start your Docker instance on your host system. That given, follow one guide below to proceed: I want to start from scratch If you haven't started to work on your project you can simply run $ compose-generator --with-instructions to generate a compose project from scratch. Select if you want to only have a compose configuration for development or for development and production. If you choose the latter, Compose Generator creates a compose config with a reverse proxy and a TLS certificate helper service and provides two Docker profiles called dev and prod that you can run $ docker compose -p dev up or respectively $ docker compose -p prod up . After choosing the production-readiness, Compose Generator asks you for the services that you want to use. Please select one or more by navigating up and down and selecting by hitting the space key. Continue with the enter key. Compose-Generator will ask you some questions on how to configure the services, based on your selection. You will get asked for your selection of services in 4 or 6 categories, depending on your selection for the production-readiness. The categories will come up in following order: ( proxy , tls helper ,) frontend , backend , database , db admin . After you answered all questions, Compose Generator starts to generate the compose configuration for you and saves the provided outcome into the current directory. After finishing, you can run $ docker compose up to run Docker Compose with the generated configuration. I already have project(s) to deploy by building the image(s) in-place (not recommended for production) Clone the project to your system if not done already and execute $ compose-generator --with-instructions in the root directory of the project. Select Custom service plus the predefined templates for the companion services that you need. Select y to build the custom service from source. I already have project(s) to deploy by pulling remote images Clone the project to your system if not done already and execute $ compose-generator --with-instructions in the root directory of the project. Select Custom service plus the predefined templates for the companion services that you need. Select N to pull the custom service image from a container registry.","title":"Quick Start"},{"location":"quick-start/#quick-start","text":"Compose Generator offers several different methods to start with. Choose the one you need for your project below.","title":"Quick Start"},{"location":"quick-start/#setup-compose-generator","text":"I want to use it for development Compose Generator makes developing and especially testing much more seamless. Get started by choosing one of the following options: I have Docker already installed Perfect! One thing less to care about ... Let's continue by installing Compose Generator: Install it on your development machine (recommended) If you use Windows on your development machine, please refer to the guide on how to install Compose Generator on Windows and if you work with Linux, you can visit the guide on how to install Compose Generator on Linux . Use it as Docker Container without installing Please refer to the guide on how to use Compose Generator with Docker . Docker is not installed yet No problem. Some commands of Compose Generator can even by used without having Docker installed, although it is recommended to have Docker installed. As Docker is required for most of the tasks for Compose Generator to cover, you should have Docker installed before using it. Compose Generator offers a simple command to install Docker with Docker Compose. Install it on your development machine If you use Windows on your development machine, please refer to the guide on how to install Compose Generator on Windows and if you work with Linux, you can visit the guide on how to install Compose Generator on Linux . I want to use it in production Compose Generator can also be used to generate production ready Docker Compose configurations. To use it in a production environment we have two options: One-time use or more frequent usage. Use it as Docker Container without installing (recommended for one-time use) Please refer to the guide on how to use Compose Generator with Docker . Install it on your development machine (recommended when using more frequently) Installing Compose Generator with the native package manager is recommended due to the enhanced ability to udate to newer versions and to integrate in potentially existing devops workflows. If you use Windows on your development machine, please refer to the guide on how to install Compose Generator on Windows and if you work with Linux, you can visit the guide on how to install Compose Generator on Linux .","title":"Setup Compose Generator"},{"location":"quick-start/#generate-your-first-docker-compose-configuration","text":"The first step is, to start your Docker instance on your host system. That given, follow one guide below to proceed: I want to start from scratch If you haven't started to work on your project you can simply run $ compose-generator --with-instructions to generate a compose project from scratch. Select if you want to only have a compose configuration for development or for development and production. If you choose the latter, Compose Generator creates a compose config with a reverse proxy and a TLS certificate helper service and provides two Docker profiles called dev and prod that you can run $ docker compose -p dev up or respectively $ docker compose -p prod up . After choosing the production-readiness, Compose Generator asks you for the services that you want to use. Please select one or more by navigating up and down and selecting by hitting the space key. Continue with the enter key. Compose-Generator will ask you some questions on how to configure the services, based on your selection. You will get asked for your selection of services in 4 or 6 categories, depending on your selection for the production-readiness. The categories will come up in following order: ( proxy , tls helper ,) frontend , backend , database , db admin . After you answered all questions, Compose Generator starts to generate the compose configuration for you and saves the provided outcome into the current directory. After finishing, you can run $ docker compose up to run Docker Compose with the generated configuration. I already have project(s) to deploy by building the image(s) in-place (not recommended for production) Clone the project to your system if not done already and execute $ compose-generator --with-instructions in the root directory of the project. Select Custom service plus the predefined templates for the companion services that you need. Select y to build the custom service from source. I already have project(s) to deploy by pulling remote images Clone the project to your system if not done already and execute $ compose-generator --with-instructions in the root directory of the project. Select Custom service plus the predefined templates for the companion services that you need. Select N to pull the custom service image from a container registry.","title":"Generate your first Docker Compose Configuration"},{"location":"supported-services/","text":"Supported services \u00b6 The following table shows all services which Compose Generator currently supports out of the box as predefined service templates. To use these templates, please refer to the generate command . Frontend Backend Database Database Admin Accent AdGuard Home Cassandra Adminer Angular ASP.NET Elasticsearch Elasticsearch HQ BitBucket Blocky FaunaDB pgAdmin Common Website Django InfluxDB PhpMyAdmin Drupal Docker Registry MariaDB RedisInsight Ghost FastAPI Meilisearch more to come ... Gitea Fiber MongoDB GitLab Flask MySQL Grafana Gin Gonic Neo4j Hoppscotch Live-Poll API OrientDB Jenkins Minecraft Server PostgreSQL Jira Monica QuestDB Jupyter Nexus3 Redis Live-Poll Node.js ScyllaDB Matomo PHP SingleStore Mediawiki Pi-hole more to come ... Nextcloud Plex OpenProject Prometheus Overleaf Rocket Owncloud Ruby on Rails Paperless-ng Spring with Gradle React Spring with Maven SonarQube TeamSpeak Uptime Kuma Telegram Bot Vue more to come ... Wordpress YouTrack more to come ... - New templates which were released with the latest version of Compose Generator - New templates which are currently in preview and will be released with the next version If you miss a predefined template and you want to create one for the public, please first read our contribution guidelines and then continue reading the instructions on how to contribute a service template . Fork the repository, create the template and open a pr to the latest release/v1.10.x branch. The community is thankful for every predefined template!","title":"Supported services"},{"location":"supported-services/#supported-services","text":"The following table shows all services which Compose Generator currently supports out of the box as predefined service templates. To use these templates, please refer to the generate command . Frontend Backend Database Database Admin Accent AdGuard Home Cassandra Adminer Angular ASP.NET Elasticsearch Elasticsearch HQ BitBucket Blocky FaunaDB pgAdmin Common Website Django InfluxDB PhpMyAdmin Drupal Docker Registry MariaDB RedisInsight Ghost FastAPI Meilisearch more to come ... Gitea Fiber MongoDB GitLab Flask MySQL Grafana Gin Gonic Neo4j Hoppscotch Live-Poll API OrientDB Jenkins Minecraft Server PostgreSQL Jira Monica QuestDB Jupyter Nexus3 Redis Live-Poll Node.js ScyllaDB Matomo PHP SingleStore Mediawiki Pi-hole more to come ... Nextcloud Plex OpenProject Prometheus Overleaf Rocket Owncloud Ruby on Rails Paperless-ng Spring with Gradle React Spring with Maven SonarQube TeamSpeak Uptime Kuma Telegram Bot Vue more to come ... Wordpress YouTrack more to come ... - New templates which were released with the latest version of Compose Generator - New templates which are currently in preview and will be released with the next version If you miss a predefined template and you want to create one for the public, please first read our contribution guidelines and then continue reading the instructions on how to contribute a service template . Fork the repository, create the template and open a pr to the latest release/v1.10.x branch. The community is thankful for every predefined template!","title":"Supported services"},{"location":"install/docker/","text":"Download \u00b6 You don't have to pull the image first. You also can skip this step. Docker Hub GitHub Container Registry docker pull chillibits/compose-generator docker pull ghcr.io/chillibits/compose-generator Use \u00b6 Linux - Docker Hub Linux - GHCR Windows - Docker Hub Windows - GHCR docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v $( pwd ) :/cg/out chillibits/compose-generator [ <command> ] docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v $( pwd ) :/cg/out ghcr.io/chillibits/compose-generator [ <command> ] docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v ${ pwd } :/cg/out chillibits/compose-generator [ <command> ] docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v ${ pwd } :/cg/out ghcr.io/chillibits/compose-generator [ <command> ] Customize \u00b6 Custom output path \u00b6 You can use another output path by replacing ${pwd} with a custom path. Example docker run --rm -it -v ./project:/cg/out chillibits/compose-generator Expose template directory \u00b6 You can pass another volume to save your custom templates to a directory on the host system. Example docker run --rm -it -v ${ pwd } :/cg/out -v ~/cg-templates:/cg/templates chillibits/compose-generator","title":"Use with Docker"},{"location":"install/docker/#download","text":"You don't have to pull the image first. You also can skip this step. Docker Hub GitHub Container Registry docker pull chillibits/compose-generator docker pull ghcr.io/chillibits/compose-generator","title":"Download"},{"location":"install/docker/#use","text":"Linux - Docker Hub Linux - GHCR Windows - Docker Hub Windows - GHCR docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v $( pwd ) :/cg/out chillibits/compose-generator [ <command> ] docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v $( pwd ) :/cg/out ghcr.io/chillibits/compose-generator [ <command> ] docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v ${ pwd } :/cg/out chillibits/compose-generator [ <command> ] docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v ${ pwd } :/cg/out ghcr.io/chillibits/compose-generator [ <command> ]","title":"Use"},{"location":"install/docker/#customize","text":"","title":"Customize"},{"location":"install/docker/#custom-output-path","text":"You can use another output path by replacing ${pwd} with a custom path. Example docker run --rm -it -v ./project:/cg/out chillibits/compose-generator","title":"Custom output path"},{"location":"install/docker/#expose-template-directory","text":"You can pass another volume to save your custom templates to a directory on the host system. Example docker run --rm -it -v ${ pwd } :/cg/out -v ~/cg-templates:/cg/templates chillibits/compose-generator","title":"Expose template directory"},{"location":"install/linux/","text":"Install from repository \u00b6 Debian/Ubuntu Fedora CentOS Raspbian To install Compose Generator on Debian or Ubuntu, execute the following commands in your terminal: sudo apt-get install ca-certificates software-properties-common curl curl -fsSL https://server.chillibits.com/files/repo/gpg | sudo apt-key add - sudo add-apt-repository \"deb https://repo.chillibits.com/ $( lsb_release -is | awk '{print tolower($0)}' ) - $( lsb_release -cs ) $( lsb_release -cs ) main\" sudo apt-get update sudo apt-get install compose-generator To install Compose Generator on Fedora, execute the following commands in your terminal: sudo dnf -y install dnf-plugins-core sudo dnf config-manager --add-repo https://server.chillibits.com/files/repo/fedora.repo sudo dnf install compose-generator To install Compose Generator on CentOS, execute the following commands in your terminal: sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://server.chillibits.com/files/repo/centos.repo sudo yum install compose-generator To install Compose Generator on Raspbian, execute the following commands in your terminal: sudo apt-get install ca-certificates software-properties-common curl curl -fsSL https://server.chillibits.com/files/repo/gpg | sudo tee /etc/apt/trusted.gpg.d/chillibits.asc sudo echo \"deb [arch=armhf] https://repo.chillibits.com/ $( lsb_release -is | awk '{print tolower($0)}' ) - $( lsb_release -cs ) $( lsb_release -cs ) main\" > /etc/apt/sources.list.d/chillibits.list sudo apt-get update sudo apt-get install compose-generator Warning The support for Raspbian is at the experimental stage. Please file a bug ticket on GitHub if there occurs a bug for you while installing. Install from package file \u00b6 You also can install Compose Generator from a package file on your host system. Debian/Ubuntu/Raspbian Fedora/CentOS Alpine Download amd64 Download arm64 Download armv5 Download armv6 Download armv7 To install it, execute the following command: dpkg -i <deb-file-name> Download amd64 Download arm64 Download armv5 Download armv6 Download armv7 To install it, execute the following command: rpm -U <rpm-file-name> Download amd64 Download arm64 Download armv5 Download armv6 Download armv7 To install it, execute the following command: apk add --allow-untrusted <apk-file-name> Use \u00b6 compose-generator [ <command> ]","title":"Install on Linux"},{"location":"install/linux/#install-from-repository","text":"Debian/Ubuntu Fedora CentOS Raspbian To install Compose Generator on Debian or Ubuntu, execute the following commands in your terminal: sudo apt-get install ca-certificates software-properties-common curl curl -fsSL https://server.chillibits.com/files/repo/gpg | sudo apt-key add - sudo add-apt-repository \"deb https://repo.chillibits.com/ $( lsb_release -is | awk '{print tolower($0)}' ) - $( lsb_release -cs ) $( lsb_release -cs ) main\" sudo apt-get update sudo apt-get install compose-generator To install Compose Generator on Fedora, execute the following commands in your terminal: sudo dnf -y install dnf-plugins-core sudo dnf config-manager --add-repo https://server.chillibits.com/files/repo/fedora.repo sudo dnf install compose-generator To install Compose Generator on CentOS, execute the following commands in your terminal: sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://server.chillibits.com/files/repo/centos.repo sudo yum install compose-generator To install Compose Generator on Raspbian, execute the following commands in your terminal: sudo apt-get install ca-certificates software-properties-common curl curl -fsSL https://server.chillibits.com/files/repo/gpg | sudo tee /etc/apt/trusted.gpg.d/chillibits.asc sudo echo \"deb [arch=armhf] https://repo.chillibits.com/ $( lsb_release -is | awk '{print tolower($0)}' ) - $( lsb_release -cs ) $( lsb_release -cs ) main\" > /etc/apt/sources.list.d/chillibits.list sudo apt-get update sudo apt-get install compose-generator Warning The support for Raspbian is at the experimental stage. Please file a bug ticket on GitHub if there occurs a bug for you while installing.","title":"Install from repository"},{"location":"install/linux/#install-from-package-file","text":"You also can install Compose Generator from a package file on your host system. Debian/Ubuntu/Raspbian Fedora/CentOS Alpine Download amd64 Download arm64 Download armv5 Download armv6 Download armv7 To install it, execute the following command: dpkg -i <deb-file-name> Download amd64 Download arm64 Download armv5 Download armv6 Download armv7 To install it, execute the following command: rpm -U <rpm-file-name> Download amd64 Download arm64 Download armv5 Download armv6 Download armv7 To install it, execute the following command: apk add --allow-untrusted <apk-file-name>","title":"Install from package file"},{"location":"install/linux/#use","text":"compose-generator [ <command> ]","title":"Use"},{"location":"install/npm/","text":"Install from official NPM registry \u00b6 If you haven't installed NPM yet, please do so by following the guide on nodejs.org . Install Compose Generator by executing: npm install -g @compose-generator/cli Update \u00b6 If you have Compose Generator already installed via NPM , you need to update by using this command: npm update -g @compose-generator/cli Use \u00b6 compose-generator [ <command> ]","title":"Install via NPM"},{"location":"install/npm/#install-from-official-npm-registry","text":"If you haven't installed NPM yet, please do so by following the guide on nodejs.org . Install Compose Generator by executing: npm install -g @compose-generator/cli","title":"Install from official NPM registry"},{"location":"install/npm/#update","text":"If you have Compose Generator already installed via NPM , you need to update by using this command: npm update -g @compose-generator/cli","title":"Update"},{"location":"install/npm/#use","text":"compose-generator [ <command> ]","title":"Use"},{"location":"install/source/","text":"Setup \u00b6 Before being able to compile the source code you first have to download it from GitHub and install Golang (if you don't have it already). Clone source from GitHub \u00b6 git clone https://github.com/compose-generator/compose-generator.git cd compose-generator Install Go \u00b6 For compiling Compose Generator from source you need to have Go 1.17 or higher installed on your system. Please refer to the official guide on how to install Go. Build from source \u00b6 If you want to build the executable, you can use the build.sh for Linux or the build.bat file for Windows: Linux Windows ./build.sh . \\b uild.bat The executables will end up in the bin subfolder for the amd64 architecture. Install from source \u00b6 If you don't care about the executable and you just want to use Compose Generator, you can use the install.sh for Linux or the install.bat for Windows. This will install the executable to a path, located in the PATH, so your OS can find it and makes it available as a command: Linux Windows ./install.sh . \\i nstall.bat Use \u00b6 compose-generator [ <command> ]","title":"Build or install from source"},{"location":"install/source/#setup","text":"Before being able to compile the source code you first have to download it from GitHub and install Golang (if you don't have it already).","title":"Setup"},{"location":"install/source/#clone-source-from-github","text":"git clone https://github.com/compose-generator/compose-generator.git cd compose-generator","title":"Clone source from GitHub"},{"location":"install/source/#install-go","text":"For compiling Compose Generator from source you need to have Go 1.17 or higher installed on your system. Please refer to the official guide on how to install Go.","title":"Install Go"},{"location":"install/source/#build-from-source","text":"If you want to build the executable, you can use the build.sh for Linux or the build.bat file for Windows: Linux Windows ./build.sh . \\b uild.bat The executables will end up in the bin subfolder for the amd64 architecture.","title":"Build from source"},{"location":"install/source/#install-from-source","text":"If you don't care about the executable and you just want to use Compose Generator, you can use the install.sh for Linux or the install.bat for Windows. This will install the executable to a path, located in the PATH, so your OS can find it and makes it available as a command: Linux Windows ./install.sh . \\i nstall.bat","title":"Install from source"},{"location":"install/source/#use","text":"compose-generator [ <command> ]","title":"Use"},{"location":"install/windows/","text":"Install via winget \u00b6 Compose Generator gets distributed for Windows via the new Windows package manager CLI called winget . As soon as the Windows package manager is installed on your Windows machine, you can open up powershell and execute the following installation command: winget install ChilliBits.CCom winget install ChilliBits.ComposeGenerator After installing Compose Generator, you should be able to run Compose Generator. If not, please restart your powershell instance to make it reload the available commands. Install via installer \u00b6 Download 64bit Download 32bit Note: It is possible, that you see an error notification by your anti-virus software, that Compose Generator is a potentially dangerous application. This can happen if the latest version was released very recently and too few people downloaded it already. If you want to validate the file signature, you can visit this GitHub repo , select your version and open the file ChilliBits.ComposeGenerator.installer.yaml . There you can find the SHA256 signatures for the x64 and x86 exe installers. Use \u00b6 compose-generator [ <command> ]","title":"Install on Windows"},{"location":"install/windows/#install-via-winget","text":"Compose Generator gets distributed for Windows via the new Windows package manager CLI called winget . As soon as the Windows package manager is installed on your Windows machine, you can open up powershell and execute the following installation command: winget install ChilliBits.CCom winget install ChilliBits.ComposeGenerator After installing Compose Generator, you should be able to run Compose Generator. If not, please restart your powershell instance to make it reload the available commands.","title":"Install via winget"},{"location":"install/windows/#install-via-installer","text":"Download 64bit Download 32bit Note: It is possible, that you see an error notification by your anti-virus software, that Compose Generator is a potentially dangerous application. This can happen if the latest version was released very recently and too few people downloaded it already. If you want to validate the file signature, you can visit this GitHub repo , select your version and open the file ChilliBits.ComposeGenerator.installer.yaml . There you can find the SHA256 signatures for the x64 and x86 exe installers.","title":"Install via installer"},{"location":"install/windows/#use","text":"compose-generator [ <command> ]","title":"Use"},{"location":"usage/add/","text":"Sometimes you need to add one or more services to your Docker Compose configuration subsequently. For this you can use the add command of Compose Generator. It handles things like duplicate port assignments, service name collisions, Docker networking, etc. automatically for you. Usage \u00b6 Long form Short form Use the add command by executing: $ compose-generator add [ service-name ] Use the add command by executing: $ compose-generator a [ service-name ] Options \u00b6 You can apply following options to the add command: Option Short Description --advanced -a Enable advanced mode with advanced questions to allow more customization. --detached -d Run the compose configuration subsequently in detached mode. --force -f Skip safety checks and delete all files that may exist. --run -r Run the compose configuration subsequently.","title":"Add command"},{"location":"usage/add/#usage","text":"Long form Short form Use the add command by executing: $ compose-generator add [ service-name ] Use the add command by executing: $ compose-generator a [ service-name ]","title":"Usage"},{"location":"usage/add/#options","text":"You can apply following options to the add command: Option Short Description --advanced -a Enable advanced mode with advanced questions to allow more customization. --detached -d Run the compose configuration subsequently in detached mode. --force -f Skip safety checks and delete all files that may exist. --run -r Run the compose configuration subsequently.","title":"Options"},{"location":"usage/generate/","text":"Description \u00b6 You can use the generate command to generate Docker Compose configurations. The services are grouped by type ( frontend , backend , database , db-admin-tool , proxy , tls-helper ). You can select one ore more services of a certain type. Tip You can later save / load your own templates with the template command . Usage \u00b6 Root command Long form Short form Use the generate command by executing: $ compose-generator Use the generate command by executing: $ compose-generator generate Use the generate command by executing: $ compose-generator g Options \u00b6 You can apply following options to the generate command: Option Short Description --advanced -a Enable advanced mode with advanced questions to allow more customization. --config <resource> -c <resource> Pass a config file / config file URL with predefined answers. Works good for CI. 1 --detached -d Run the compose configuration subsequently in detached mode. --force -f Skip safety checks and overwrite all files, that may exist. --run -r Run the compose configuration subsequently. --with-instructions -i Generate a README.md file with usage instruction for predefined template. You can find an example configuration file here . \u21a9","title":"Generate command"},{"location":"usage/generate/#description","text":"You can use the generate command to generate Docker Compose configurations. The services are grouped by type ( frontend , backend , database , db-admin-tool , proxy , tls-helper ). You can select one ore more services of a certain type. Tip You can later save / load your own templates with the template command .","title":"Description"},{"location":"usage/generate/#usage","text":"Root command Long form Short form Use the generate command by executing: $ compose-generator Use the generate command by executing: $ compose-generator generate Use the generate command by executing: $ compose-generator g","title":"Usage"},{"location":"usage/generate/#options","text":"You can apply following options to the generate command: Option Short Description --advanced -a Enable advanced mode with advanced questions to allow more customization. --config <resource> -c <resource> Pass a config file / config file URL with predefined answers. Works good for CI. 1 --detached -d Run the compose configuration subsequently in detached mode. --force -f Skip safety checks and overwrite all files, that may exist. --run -r Run the compose configuration subsequently. --with-instructions -i Generate a README.md file with usage instruction for predefined template. You can find an example configuration file here . \u21a9","title":"Options"},{"location":"usage/install/","text":"As Compose Generator acts as a helper for your Docker environment, it can also be used to install Docker and Docker Compose on your host machine with a single command. This helps to make your start much more seamless. With the lastest version of Docker, the Docker Compose cli is already bundled into the Docker installation and is used by Compose Generator by default. Warning The install command does not work in combination with the dockerized version of Compose Generator. If you want to use the install command, please install Compose Generator on your host system. Please see the guides for Linux , Windows to do so. Usage \u00b6 Long form Short form Use the install command by executing: $ compose-generator install Use the install command by executing: $ compose-generator i","title":"Install command"},{"location":"usage/install/#usage","text":"Long form Short form Use the install command by executing: $ compose-generator install Use the install command by executing: $ compose-generator i","title":"Usage"},{"location":"usage/remove/","text":"Compose Generator can help you to remove services from an existing Docker Compose configuration without leaving unused networks, service dependencies or other stuff, resulting in chaos. The remove command can help you to remove a single or multiple services at once from your configuration. Usage \u00b6 Long form Short form Use the remove command by executing: $ compose-generator remove [ service-name ] ... Use the remove command by executing: $ compose-generator r [ service-name ] ... Options \u00b6 You can apply following options to the remove command: Option Short Description --advanced -a Enable advanced mode with advanced questions to allow more customization. --detached -d Run the compose configuration subsequently in detached mode. --force -f Skip safety checks and delete all files that may exist. --run -r Run the compose configuration subsequently. --with-volumes -v Also remove all associated volumes of the stated services on disk.","title":"Remove command"},{"location":"usage/remove/#usage","text":"Long form Short form Use the remove command by executing: $ compose-generator remove [ service-name ] ... Use the remove command by executing: $ compose-generator r [ service-name ] ...","title":"Usage"},{"location":"usage/remove/#options","text":"You can apply following options to the remove command: Option Short Description --advanced -a Enable advanced mode with advanced questions to allow more customization. --detached -d Run the compose configuration subsequently in detached mode. --force -f Skip safety checks and delete all files that may exist. --run -r Run the compose configuration subsequently. --with-volumes -v Also remove all associated volumes of the stated services on disk.","title":"Options"},{"location":"usage/template/","text":"You can use Compose Generator to save your Docker Compose configurations for later use and to restore them. Use the template save command to save your custom configuration and load it with template load . Info Please note, that templates are something different than predefined service templates , which you can use with the generate command . Predefined service templates are immutable and templates can be created and modified by you. Save template \u00b6 Use the template save command to save custom configuration templates. Usage \u00b6 Long form Short form Use the save sub-command by executing: $ compose-generator template save [ template-name ] Use the save sub-command by executing: $ compose-generator t s [ template-name ] Options \u00b6 You can apply following options to the save sub-command: Option Short Description --force -f Skip safety checks and overwrite all files, that may exist. --stash -s Remove configuration files after saving the template. Load template \u00b6 Use the template load command to load custom configuration templates again. Usage \u00b6 Long form Short form Use the load sub-command by executing: $ compose-generator template load [ template-name ] Use the load sub-command by executing: $ compose-generator t l [ template-name ] Options \u00b6 You can apply following options to the load sub-command: Option Short Description --force -f Skip safety checks and overwrite all files, that may exist. --show -s Do not load a template. Instead only list all templates and terminate.","title":"Template command"},{"location":"usage/template/#save-template","text":"Use the template save command to save custom configuration templates.","title":"Save template"},{"location":"usage/template/#usage","text":"Long form Short form Use the save sub-command by executing: $ compose-generator template save [ template-name ] Use the save sub-command by executing: $ compose-generator t s [ template-name ]","title":"Usage"},{"location":"usage/template/#options","text":"You can apply following options to the save sub-command: Option Short Description --force -f Skip safety checks and overwrite all files, that may exist. --stash -s Remove configuration files after saving the template.","title":"Options"},{"location":"usage/template/#load-template","text":"Use the template load command to load custom configuration templates again.","title":"Load template"},{"location":"usage/template/#usage_1","text":"Long form Short form Use the load sub-command by executing: $ compose-generator template load [ template-name ] Use the load sub-command by executing: $ compose-generator t l [ template-name ]","title":"Usage"},{"location":"usage/template/#options_1","text":"You can apply following options to the load sub-command: Option Short Description --force -f Skip safety checks and overwrite all files, that may exist. --show -s Do not load a template. Instead only list all templates and terminate.","title":"Options"}]}